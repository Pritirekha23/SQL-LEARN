# -- AGGREGATE FUNCTION IN SQL


USE UNIVERSITY;
SHOW TABLES;

CREATE TABLE STUDENT_DETAILS(
 SID INT,
 NAME VARCHAR(20),
 BRANCH VARCHAR(20),
 MARK INT,
 PENDINF_DUES INT
);

INSERT INTO STUDENT_DETAILS (SID, NAME, BRANCH, MARK, PENDINF_DUES)
VALUES (101, 'Rahul', 'CSE', 75, 50000),
       (102, 'Priyanka', 'CSE', 81, 45000),
       (103, 'Zini', 'CE', 91, 74000),
       (104, 'Jack', 'ECE', 83, 25000),
       (105, 'Scoot', 'EEE', 86, 0),
       (106, 'Dev', 'MECH', 74, 25000),
       (107, 'Anjali', 'CSE', 91, 45000);
       
SELECT * FROM STUDENT_DETAILS;
       
# Write a SQL query to display the total number of records in a table.
SELECT count(*) AS 'TOTAL RECORD' FROM STUDENT_DETAILS ;

# Write a SQL query to display the total outstanding dues of all the students combined.
SELECT SUM( PENDINF_DUES) FROM STUDENT_DETAILS;

# Write a SQL query to display the total outstanding dues of all the CSE students combined.
SELECT SUM( PENDINF_DUES) FROM STUDENT_DETAILS WHERE BRANCH="CSE";

# Write a SQL query to display the average pending dues of students.
SELECT AVG( PENDINF_DUES) FROM STUDENT_DETAILS;

# Write a SQL query to display the min mark from the mark column.
SELECT MIN(MARK) FROM STUDENT_DETAILS;

# Write a SQL query to display the max mark from the mark column.
SELECT MAX(MARK) FROM STUDENT_DETAILS;

# AGGREGATE FUNCTION WITH NULL VALUE
-- INSERT RECORD
INSERT INTO STUDENT_DETAILS VALUES(108, 'STALINA', 'EEE', NULL, 65000);

-- FIND OUT TOTAL MARK
SELECT sum(MARK) FROM STUDENT_DETAILS;
SELECT avg(MARK) FROM STUDENT_DETAILS;
SELECT min(MARK) FROM STUDENT_DETAILS;
SELECT max(MARK) FROM STUDENT_DETAILS;

# COUNT(*) WILL NEGLECT  DOES NOT IGNORE  NULL VALUE
SELECT count(*)  from STUDENT_DETAILS;

#IT WILL GIVE 8
SELECT count(NAME)  from STUDENT_DETAILS;

#IT WILL GIVE 7 (COUNT WITH COLUMN NAME IGNORE NULL VALUE)
SELECT count(MARK)  from STUDENT_DETAILS;


# BEHAVIOUR OF AGGREGATE FUNCTION WITH DISTINCT CLAUSE.
SELECT sum(PENDINF_DUES) FROM STUDENT_DETAILS;

# DISTINCT IT WILL REMOVE DUPLICATE VALUES.
SELECT sum(DISTINCT PENDINF_DUES) FROM STUDENT_DETAILS;

